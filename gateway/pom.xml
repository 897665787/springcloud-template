<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.company</groupId>
		<artifactId>template</artifactId>
		<version>1.0.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>template-gateway</artifactId>
	<packaging>jar</packaging>

	<description>gateway路由网关</description>
    
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
			<exclusions>
				<!-- 一定要排除掉 spring-boot-starter-web 依赖，否则启动报错 -->
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- 网关用到template-framework的功能比较少，没必要引用，把少部分功能copy过去即可
		<dependency>
		    <groupId>com.company</groupId>
		    <artifactId>template-framework</artifactId>
		    <version>1.0.0</version>
		</dependency>
		 -->
		<dependency>
		    <groupId>com.company</groupId>
		    <artifactId>template-common</artifactId>
		    <version>1.0.0</version>
		</dependency>
		<!-- eureka客户端 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		
		<!-- 配置中心，config和apollo选其中一个就行 -->
		<!-- config客户端 -->
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-client</artifactId>
        </dependency>
        <!--apollo客户端 -->
		<dependency>
			<groupId>com.ctrip.framework.apollo</groupId>
			<artifactId>apollo-client</artifactId>
			<version>1.9.2</version>
		</dependency>
		<!-- 配置中心，config和apollo选其中一个就行 -->

		<!-- 监控，SpringBootAdmin、Prometheus选其中一个就行 -->
		<!-- actuator端点 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- SpringBootAdmin监控，核心作用就是导入spring-boot-starter-actuator，所以无需导入 -->
		<!--
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>2.2.4</version>
		</dependency>
		-->
		<!-- Prometheus监控，增加/prometheus端点 -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!-- 监控，SpringBootAdmin、Prometheus选其中一个就行 -->

		<!-- MQ -->
		<!-- rabbitMQ -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<!-- RocketMQ -->
		<dependency>
			<groupId>org.apache.rocketmq</groupId>
			<artifactId>rocketmq-spring-boot-starter</artifactId>
			<version>2.2.3</version>
		</dependency>
		<!-- MQ -->
		
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
			</plugin>
		</plugins>
	</build>
</project>