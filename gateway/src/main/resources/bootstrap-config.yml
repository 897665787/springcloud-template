# bootstrap是系统级配置文件，优先级高于application.yml
# 本配置用于配置中心的配置加载
# springcloud-config客户端配置动态实时刷新不太好用，建议还是使用apollo或者nacos做配置中心

# 下面是环境区分，多个配置以 ‘---’ 分开
---
# dev环境配置
spring:
  config:
    activate:
      on-profile: dev
    import:
      - optional:configserver:http://localhost:4001 # 在Spring Boot 2.7.x版本中，引用了config会有configserver检查
  cloud:
    config:
      enabled: false # config配置中心开关
      uri: http://localhost:4001 # config-server的请求路径
      name: ${spring.application.name} # 指定拉取配置文件的 application，默认使用 spring.application.name 的值
      profile: ${spring.profiles.active} # 如果没有默认值，会从spring.profiles.active里面获取
      label: master # 拉取的分支

---
# test环境配置
spring:
  config:
    activate:
      on-profile: test
    import:
      - optional:configserver:http://localhost:4001 # 在Spring Boot 2.7.x版本中，引用了config会有configserver检查
  cloud:
    config:
      enabled: false # config配置中心开关
      uri: http://localhost:4001 # config-server的请求路径
      name: ${spring.application.name} # 指定拉取配置文件的 application，默认使用 spring.application.name 的值
      profile: ${spring.profiles.active} # 如果没有默认值，会从spring.profiles.active里面获取
      label: master # 拉取的分支

---
# pre环境配置
spring:
  config:
    activate:
      on-profile: pre
    import:
      - optional:configserver:http://localhost:4001 # 在Spring Boot 2.7.x版本中，引用了config会有configserver检查
  cloud:
    config:
      enabled: false # config配置中心开关
      uri: http://localhost:4001 # config-server的请求路径
      name: ${spring.application.name} # 指定拉取配置文件的 application，默认使用 spring.application.name 的值
      profile: ${spring.profiles.active} # 如果没有默认值，会从spring.profiles.active里面获取
      label: master # 拉取的分支

---
# prod环境配置
spring:
  config:
    activate:
      on-profile: prod
    import:
      - optional:configserver:http://localhost:4001 # 在Spring Boot 2.7.x版本中，引用了config会有configserver检查
  cloud:
    config:
      enabled: false # config配置中心开关
      uri: http://localhost:4001 # config-server的请求路径
      name: ${spring.application.name} # 指定拉取配置文件的 application，默认使用 spring.application.name 的值
      profile: ${spring.profiles.active} # 如果没有默认值，会从spring.profiles.active里面获取
      label: master # 拉取的分支
