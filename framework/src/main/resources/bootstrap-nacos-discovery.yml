# bootstrap是系统级配置文件，优先级高于application.yml
# 本配置用于注册中心的配置加载

# 下面是环境区分，多个配置以 ‘---’ 分开
---
# dev环境配置
spring:
  config:
    activate:
      on-profile: dev
  cloud:
    nacos:
      discovery:
        enabled: true # nacos注册中心开关
        server-addr: 127.0.0.1:8848 # discovery-server的请求路径
        username:  # 用户名
        password:  # 密码
        # 命名空间，默认public，一般做环境隔离（如开发、测试、生产），如果nacos-server分环境部署，可以下沉到项目名
        namespace: ${spring.profiles.active}
        # Group，默认DEFAULT_GROUP，一般配置为项目名，如果命名空间下沉，可以下沉到微服务名或不配置
        group: springcloud-template
        #metadata:
          #developer: 1 # 具体参考上游服务的developer.headers配置
          # 本地服务路由环境流量调试操作步骤：
          # 1.放开配置spring.cloud.nacos.discovery.metadata.developer={userId}设置为登录用户ID
          # 2.bootstrap.yml设置spring.profiles.active=dev

---
# test环境配置
spring:
  config:
    activate:
      on-profile: test
  cloud:
    nacos:
      discovery:
        enabled: true # nacos注册中心开关
        server-addr: 127.0.0.1:8848 # discovery-server的请求路径
        username:  # 用户名
        password:  # 密码
        # 命名空间，默认public，一般做环境隔离（如开发、测试、生产），如果nacos-server分环境部署，可以下沉到项目名
        namespace: ${spring.profiles.active}
        # Group，默认DEFAULT_GROUP，一般配置为项目名，如果命名空间下沉，可以下沉到微服务名或不配置
        group: springcloud-template
        #metadata:
          #developer: 1 # 具体参考上游服务的developer.headers配置
          # 本地服务路由环境流量调试操作步骤：
          # 1.放开配置spring.cloud.nacos.discovery.metadata.developer={userId}设置为登录用户ID
          # 2.bootstrap.yml设置spring.profiles.active=sit

---
# pre环境配置
spring:
  config:
    activate:
      on-profile: pre
  cloud:
    nacos:
      discovery:
        enabled: true # nacos注册中心开关
        server-addr: 127.0.0.1:8848 # discovery-server的请求路径
        username:  # 用户名
        password:  # 密码
        # 命名空间，默认public，一般做环境隔离（如开发、测试、生产），如果nacos-server分环境部署，可以下沉到项目名
        namespace: ${spring.profiles.active}
        # Group，默认DEFAULT_GROUP，一般配置为项目名，如果命名空间下沉，可以下沉到微服务名或不配置
        group: springcloud-template
        #metadata:
          #developer: 1 # 具体参考上游服务的developer.headers配置
          # 本地服务路由环境流量调试操作步骤：
          # 1.放开配置spring.cloud.nacos.discovery.metadata.developer={userId}设置为登录用户ID
          # 2.bootstrap.yml设置spring.profiles.active=pre

---
# prod环境配置
spring:
  config:
    activate:
      on-profile: prod,prod-zone1,prod-zone2
  cloud:
    nacos:
      discovery:
        enabled: true # nacos注册中心开关
        server-addr: 127.0.0.1:8848 # discovery-server的请求路径
        username:  # 用户名
        password:  # 密码
        # 命名空间，默认public，一般做环境隔离（如开发、测试、生产），如果nacos-server分环境部署，可以下沉到项目名
        namespace: ${spring.profiles.active}
        # Group，默认DEFAULT_GROUP，一般配置为项目名，如果命名空间下沉，可以下沉到微服务名或不配置
        group: springcloud-template
        #metadata:
          #developer: 1 # 具体参考上游服务的developer.headers配置
          # 本地服务路由环境流量调试操作步骤：
          # 1.放开配置spring.cloud.nacos.discovery.metadata.developer={userId}设置为登录用户ID
          # 2.bootstrap.yml设置spring.profiles.active=prod
