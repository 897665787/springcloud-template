spring:
  profiles:
    include: eureka-test,redis-test,rabbitmq-test
  datasource:
    dynamic: # 使用动态数据源
      primary: master # 设置默认的数据源或者数据源组,默认master
      strict: false # 是否启用严格模式,默认不启动. 严格模式下未匹配到数据源直接报错, 非严格模式下则使用默认数据源primary所设置的数据源
      lazy: false # 是否懒加载数据源
      datasource:
        master:
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/template?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&tinyInt1isBit=false
          username: root
          password: 12345678
        slave_1: # 下划线具有分组功能，@Slave注解对应slave数据源或slave分组
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/template_slave1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&tinyInt1isBit=false
          username: root
          password: 12345678
        slave_2: # 下划线具有分组功能，@Slave注解对应slave数据源或slave分组
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/template_slave2?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&tinyInt1isBit=false
          username: root
          password: 12345678
        common: # 下划线具有分组功能，@Slave注解对应slave数据源或slave分组
          driver-class-name: com.mysql.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3306/shuttle_common?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&tinyInt1isBit=false
          username: root
          password: 12345678

canal:
  mode: simple # simple,cluster,zookeeper,kafka,rocketMQ，默认：simple 可以使用一个不存在的选项关闭canal
  server: 127.0.0.1:11111 # canal的地址
  destination: example # 数据同步的目的地，默认：example
  
template:
  domain: http://t-domain.com
  enable:
    cache: guava # guava:本地缓存,redis:redis缓存,combination:组合缓存
    redisson: true
    idempotent: false
    rabbitmq: true
  sqllimit:
    enable: true
    max: 9999
