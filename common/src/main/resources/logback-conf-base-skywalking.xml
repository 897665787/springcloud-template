<?xml version="1.0" encoding="UTF-8"?>
<included>
	<!-- spring配置变量 -->
	<springProperty scope="context" name="FILE_PATH" source="logging.file.path"/>
	<!--日志文件的保存路径 -->
	<property name="LOG_HOME" value="${FILE_PATH}" />
	<!-- 日志输出格式 -->
	<property name="ENCODER_PATTERN" value="%d{HH:mm:ss.SSS} [%tid] [%X{trace-id}] [%t] %5p %logger{0}.%M[%L] - %m%n" />

	<!-- 替换普通MDC，利用transmittable-thread-local解决ForkJoinPool日志ID传递问题，启动参数加上：-javaagent:path/to/transmittable-thread-local-2.x.x.jar -->
	<contextListener class="com.ofpay.logback.TtlMdcListener"/>

	<!-- 控制台日志：输出全部日志到控制台 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
				<pattern>${ENCODER_PATTERN}</pattern>
			</layout>
		</encoder>
	</appender>

	<!-- 文件日志：输出全部日志到文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_HOME}/info.log</File>
        <append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<maxHistory>7</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>1GB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
				<pattern>${ENCODER_PATTERN}</pattern>
			</layout>
		</encoder>
	</appender>

	<!-- 错误日志：用于将错误日志输出到独立文件 -->
	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_HOME}/error.log</File>
        <append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
			<!--日志文件保留天数-->
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
				<pattern>${ENCODER_PATTERN}</pattern>
			</layout>
		</encoder>
		<!--日志文件最大的大小-->
		<!--
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
         -->
		<!-- 所有error日志都在这里-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
	</appender>

	<!-- 异步日志 -->
	<appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志，默认的，如果队列的 80% 已满，则会丢弃 TRACT、DEBUG、INFO 级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度，该值会影响性能，默认值为 256 -->
		<queueSize>256</queueSize>
		<!-- 添加附加的 appender，最多只能添加一个 -->
		<appender-ref ref="FILE" />
		<appender-ref ref="ERROR_FILE" />
	</appender>

	<springProfile name="dev">
		<root>
			<level value="INFO" />
			<appender-ref ref="STDOUT" />
			<appender-ref ref="FILE" />
			<appender-ref ref="ERROR_FILE" />
			<!-- <appender-ref ref="ASYNC_FILE" /> -->
		</root>
	</springProfile>

	<springProfile name="test,pre,prod">
		<root>
			<level value="INFO" />
			<appender-ref ref="FILE" />
			<appender-ref ref="ERROR_FILE" />
			<!-- <appender-ref ref="ASYNC_FILE" /> -->
		</root>
	</springProfile>

</included>
