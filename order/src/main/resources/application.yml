spring:
  config:
    import: classpath:bootstrap.yml # 在Spring Boot 2.7.x版本中，默认情况下，bootstrap.yml件不再被自动加载
  profiles:
    include: redis,rabbitmq,rocketmq,elasticsearch,datasource
  main:
    allow-bean-definition-overriding: true

logging:
  #为了避免日志目录生成{APP_NAME}_IS_UNDEFINED目录，不能使用默认配置logback.xml或logback-spring.xml命名，详细参考：http://www.itersblog.com/archives/5.html
  config: classpath:logback-conf.xml
  file:
    #日志文件目录。./表示相对于项目根目录，即项目根目录下的logs目录。也可配置绝对路径，如：/home/webapp/logs
    path: ./logs/${spring.application.name}

# Feign 配置
feign:
  circuitbreaker:
    enabled: true  # 启用 Feign 熔断支持
    #httpclient: # 使用Apache HttpClient作为http客户端，默认HttpURLConnection
    #enabled: true
    #okhttp: # 使用okhttp作为http客户端  ，默认HttpURLConnection
    #enabled: true
  client:
    config:
      default:
        connectTimeout: 1000 # 连接超时时间，默认1000ms
        readTimeout: 5000 # 读取超时时间（单次请求），默认1000ms

# 熔断器 配置
resilience4j:
  timelimiter:
    configs:
      default:
        # 熔断器的超时时间 = Ribbon的重试次数(包含首次) * (ribbon.ReadTimeout + ribbon.ConnectTimeout)
        timeoutDuration: 5s  # 执行超时时间（整个调用过程>=单次请求*重试次数）
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        failureRateThreshold: 50    # 触发熔断的失败率阈值（%）
        minimumNumberOfCalls: 5     # 最小调用次数
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10       # 滑动窗口大小
        waitDurationInOpenState: 5s # 熔断开启后等待时间
        permittedNumberOfCallsInHalfOpenState: 3

mybatis-plus:
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapper-locations: classpath*:mapper/**/*Mapper.xml
  # 搜索指定包别名
  type-aliases-package: com.company.*.entity
  configuration:
    cacheEnabled: false # 使全局的映射器启用或禁用缓存
    lazyLoadingEnabled: true # 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载
    mapUnderscoreToCamelCase: true # 使用驼峰命名法转换字段
    jdbcTypeForNull: NULL # 设置但JDBC类型为空时,某些驱动程序要指定值,default:OTHER，插入空值时不需要指定类型
    logImpl: org.apache.ibatis.logging.log4j2.Log4j2Impl # 打印SQL语句
  global-config:
    db-config:
      #主键类型 0(AUTO):"数据库ID自增", 1(INPUT):"用户输入ID",2(ID_WORKER):"全局唯一ID (数字类型唯一ID)", 3(UUID):"全局唯一ID UUID";
      id-type: 0

template:
  sequence:
    datacenterId: 1
  threadpool:
    corePoolSize: 10
    maxPoolSize: 20
    queueCapacity: 200
    keepAliveSeconds: 60
    threadNamePrefix: t-subTask-
    waitForTasksToCompleteOnShutdown: true
    awaitTerminationSeconds: 60
