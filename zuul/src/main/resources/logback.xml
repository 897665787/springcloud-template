<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
	<!-- 应用名称 -->
	<property name="APP_NAME" value="template-zuul" />
	<!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为logs目录做日志存放的目录 -->
	<property name="LOG_HOME" value="/logs/${APP_NAME}" />
	<!-- 日志输出格式 -->
	<property name="ENCODER_PATTERN" value="%d{HH:mm:ss.SSS} [%X{trace-id}] [%t] %5p %logger{0}.%M[%L] - %m%n" />
	<contextName>${APP_NAME}</contextName>

	<!-- 控制台日志：输出全部日志到控制台 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>${ENCODER_PATTERN}</Pattern>
		</encoder>
	</appender>

	<!-- 文件日志：输出全部日志到文件 -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_HOME}/info.log</File>
        <append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/info.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- 错误日志：用于将错误日志输出到独立文件 -->
	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${LOG_HOME}/error.log</File>
        <append>true</append>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<!--日志文件保留天数-->
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN}</pattern>
		</encoder>
		<!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>
		<!-- 所有error日志都在这里-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
	</appender>
	
	<!-- 异步日志 -->
	<appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志，默认的，如果队列的 80% 已满，则会丢弃 TRACT、DEBUG、INFO 级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度，该值会影响性能，默认值为 256 -->
		<queueSize>256</queueSize>
		<!-- 添加附加的 appender，最多只能添加一个 -->
		<appender-ref ref="FILE" />
		<appender-ref ref="ERROR_FILE" />
	</appender>
	
	<springProfile name="dev">
		<root>
			<level value="INFO" />
			<appender-ref ref="STDOUT" />
			<appender-ref ref="FILE" />
			<appender-ref ref="ERROR_FILE" />
			<!-- <appender-ref ref="ASYNC_FILE" /> -->
		</root>
		<logger name="com.company.zuul" level="DEBUG" additivity="false">
	        <appender-ref ref="STDOUT"/>
	        <appender-ref ref="FILE"/>
	        <appender-ref ref="ERROR_FILE"/>
	        <!-- <appender-ref ref="ASYNC_FILE" /> -->
	    </logger>
	</springProfile>
	
	<springProfile name="test,pre,prod">
		<root>
			<level value="INFO" />
			<appender-ref ref="FILE" />
			<appender-ref ref="ERROR_FILE" />
			<!-- <appender-ref ref="ASYNC_FILE" /> -->
		</root>
	</springProfile>
	
	<!-- 独立输出的同步日志 -->
	<appender name="THREAD_POOL_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/threadpool.log</File>
        <append>true</append>
        <!--过滤器,只打INFO级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/threadpool.%d{yyyy-MM-dd}.log
			</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${ENCODER_PATTERN}</pattern>
		</encoder>
    </appender>
    <logger name="LOG_THREADPOOL" level="INFO" additivity="false">
        <appender-ref ref="THREAD_POOL_FILE" />
    </logger>
</configuration>