spring:
  profiles:
    include: redis
  main:
    allow-bean-definition-overriding: true

logging:
  #为了避免日志目录生成{APP_NAME}_IS_UNDEFINED目录，不能使用默认配置logback.xml或logback-spring.xml命名，详细参考：http://www.itersblog.com/archives/5.html
  config: classpath:logback-conf.xml
  file:
    #日志文件目录。./表示相对于项目根目录，即项目根目录下的logs目录。也可配置绝对路径，如：/home/webapp/logs
    path: ./logs/${spring.application.name}
    
#参考https://www.cnblogs.com/zhenbianshu/p/9630167.html，https://blog.csdn.net/u010395804/article/details/80266335
hystrix:
  command:
    default: #全局默认配置
      execution: #线程隔离相关
        timeout:
          enabled: true #是否给方法执行设置超时时间，默认true
        isolation:
          strategy: THREAD #默认线程池方式。还有一种信号量的方式SEMAPHORE
          thread:
            #Hystrix的超时时间 = Ribbon的重试次数(包含首次) * (ribbon.ReadTimeout + ribbon.ConnectTimeout)
            timeoutInMilliseconds: 1000 #方法执行超时时间，默认1000ms
            interruptOnTimeout: true #发生超时时是否中断方法的执行，默认true
            interruptOnCancel: false #是否在方法执行被取消时中断方法，默认false
  threadpool:
    default:
      #核心线程池的大小，默认 10，一般根据 QPS * 99% cost + redundancy count 计算得出
      coreSize: 10
      #是否允许线程池扩展到最大线程池数量，默认 false
      allowMaximumSizeToDivergeFromCoreSize: true
      #线程池中线程的最大数量，默认10，此配置项单独配置时并不会生效，需要启用 allowMaximumSizeToDivergeFromCoreSize 项
      maximumSize: 15
      #由上面的 maximumSize，我们知道，线程池内核心线程数目都在忙碌，再有新的请求到达时，线程池容量可以被扩充为到最大数量，等到线程池空闲后，多于核心数量的线程还会被回收，此值指定了线程被回收前的存活时间，默认 2min
      keepAliveTimeMinutes: 2
  circuitBreaker: #熔断器相关配置
    enabled: true #是否启动熔断器，默认true，false表示不要引入Hystrix
    requestVolumeThreshold: 20 #启用熔断器功能窗口时间内的最小请求数
    sleepWindowInMilliseconds: 5000 #所以此配置的作用是指定熔断器打开后多长时间内允许一次请求尝试执行，默认5000ms
    errorThresholdPercentage: 50 #窗口时间内超过50%的请求失败后就会打开熔断器将后续请求快速失败掉,默认50
    
ribbon:
  eager-load: #饥饿加载，默认false(用于防止第一次请求初始化耗时长而报错)
    enabled: true
    clients: template-order #@FeignClient value值，多个逗号分隔
  #Ribbon重试次数(包含首次) = 1 + ribbon.MaxAutoRetries + ribbon.MaxAutoRetriesNextServer + (ribbon.MaxAutoRetries * ribbon.MaxAutoRetriesNextServer)
  MaxAutoRetries: 0 #同一实例最大重试次数，不包括首次调用。默认0
  MaxAutoRetriesNextServer: 0 #同一个微服务其他实例的最大重试次数，不包括第一次调用的实例。默认1
  OkToRetryOnAllOperations: false #是否所有操作（GET、POST等）都允许重试。默认false
  ServerListRefreshInterval: 2000 #从注册中心刷新服务器列表信息的时间间隔，默认2000ms
  #ConnectTimeout = feign.client.config.default.connectTimeout
  ConnectTimeout: 1000 #连接超时时间，默认无
  #ReadTimeout >= Ribbon重试次数(包含首次) * feign.client.config.default.connectTimeout
  ReadTimeout: 1000 #读取超时时间，默认无

template:
  sequence:
    datacenterId: 2
  threadpool:
    corePoolSize: 10
    maxPoolSize: 20
    queueCapacity: 200
    keepAliveSeconds: 60
    threadNamePrefix: t-subTask-
    waitForTasksToCompleteOnShutdown: true
    awaitTerminationSeconds: 60

# XXL-JOB配置，详细介绍请看XxlJobConfig
xxl:
  job:
    admin:
      # 调度中心部署根地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
      addresses: http://127.0.0.1:8080/xxl-job-admin
    # 执行器通讯TOKEN [选填]：非空时启用；
    accessToken: default_token # 与xxl-job-admin的配置保持一致，如果要启用自动注册，必填
    executor:
      # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: job-executor
      # 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
      address: 
      # 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip: 
      # 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      port: 0
      # 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath: ${logging.file.path}/jobhandler
      # 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
      logretentiondays: 30
