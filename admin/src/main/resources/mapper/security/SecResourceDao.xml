<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.company.admin.mapper.security.SecResourceDao">

    <insert id="save" parameterType="secResource" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sc_security_resource(`name`,`key`,pid,pkey,`type`,url,method,seq,`desc`,assign,log)
        VALUES (#{name},#{key},#{parent.id},#{parent.key},#{type},#{url},#{method},#{seq},#{desc},#{assign},#{log})
        ON DUPLICATE KEY UPDATE update_time=NOW()
    </insert>

    <insert id="saveSuperiorRes" parameterType="secResource">
        INSERT IGNORE INTO sc_security_role_res
        VALUES (1, #{id})
    </insert>

    <delete id="remove" parameterType="secResource">
        DELETE FROM sc_security_resource
        WHERE id=#{id}
    </delete>

    <delete id="removeSuperiorRes" parameterType="secResource">
        DELETE FROM sc_security_role_res
        WHERE role_id=1 AND resource_id=#{id}
    </delete>

    <delete id="batchRemoveRoleRes" parameterType="secResource">
        DELETE FROM sc_security_role_res
        WHERE role_id!=1
        <if test="list!=null and list.size>0">
            AND resource_id IN
            <foreach collection="list" open="(" item="item" close=")" separator=",">
                #{item.id}
            </foreach>
        </if>
    </delete>

    <update id="update" parameterType="secResource">
        UPDATE sc_security_resource
        <trim prefix="SET" prefixOverrides=",">
            <if test="name!=null">
                ,`name`=#{name}
            </if>
            <if test="key!=null">
                ,`key`=#{key}
            </if>
            <if test="parent!=null">
                ,pid=#{parent.id}
            </if>
            <if test="parent!=null">
                ,pkey=#{parent.key}
            </if>
            <if test="type!=null">
                ,`type`=#{type}
                <choose>
                    <when test="type!=2">
                        ,url=NULL
                        ,method=NULL
                    </when>
                    <otherwise>
                        <if test="url!=null">
                            ,url=#{url}
                        </if>
                        <if test="method!=null">
                            ,method=#{method}
                        </if>
                    </otherwise>
                </choose>
            </if>
            <if test="seq!=null">
                ,seq=#{seq}
            </if>
            <if test="desc!=null">
                ,`desc`=#{desc}
            </if>
            <if test="assign!=null">
                ,assign=#{assign}
            </if>
            <if test="log!=null">
                ,log=#{log}
            </if>
            ,update_time=NOW()
        </trim>
        WHERE id=#{id}
    </update>

    <update id="batchUpdate" parameterType="secResource">
        UPDATE sc_security_resource
        <trim prefix="SET" prefixOverrides=",">
            <if test="assign!=null">
                ,assign=#{assign}
            </if>
            ,update_time=NOW()
        </trim>
        <if test="list!=null and list.size>0">
            WHERE id IN
            <foreach collection="list" open="(" item="item" close=")" separator=",">
                #{item.id}
            </foreach>
        </if>
    </update>

    <resultMap id="secResourceMap" type="secResource" autoMapping="true">
        <association property="parent" javaType="secResource" autoMapping="true" columnPrefix="p_"/>
    </resultMap>

    <select id="get" parameterType="secResource" resultMap="secResourceMap">
        SELECT r.*,
        p.id AS p_id,p.name AS p_name
        FROM sc_security_resource r
        LEFT JOIN sc_security_resource p ON r.pid=p.id
        WHERE r.id=#{id}
    </select>

    <sql id="listCondition">
        FROM sc_security_resource r
        LEFT JOIN sc_security_resource p ON r.pid=p.id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id!=null">
                AND r.id=#{id}
            </if>
            <if test="dynamic!=null and dynamic.name!=null and dynamic.name!=''">
                AND r.name LIKE CONCAT('%',#{dynamic.name},'%')
            </if>
            <if test="key!=null and key!=''">
                AND r.key=#{key}
            </if>
            <if test="dynamic!=null and dynamic.key!=null and dynamic.key!=''">
                AND r.key LIKE CONCAT('%',#{dynamic.key},'%')
            </if>
            <if test="parent!=null and parent.id!=null">
                AND p.id=#{parent.id}
            </if>
            <if test="type!=null">
                AND r.type=#{type}
            </if>
            <if test="url!=null and url!=''">
                AND r.url=#{url}
            </if>
            <if test="dynamic!=null and dynamic.url!=null and dynamic.url!=''">
                AND r.url LIKE CONCAT('%',#{dynamic.url},'%')
            </if>
            <if test="method!=null and method!=''">
                AND r.method=#{method}
            </if>
        </trim>
    </sql>

    <select id="list" parameterType="secResource" resultMap="secResourceMap">
        SELECT r.*,p.id AS p_id,p.name AS p_name
        <include refid="listCondition"/>
        <if test="sort!=null"><foreach collection="sort" index="index" item="item" open="ORDER BY" separator=",">${index} ${item}</foreach></if>
        <if test="offset!=null and limit!=null"> LIMIT #{offset},#{limit}</if>
    </select>

    <select id="listCombo" resultMap="secResourceMap">
        SELECT id,`name`,pid AS p_id,`type`
        FROM sc_security_resource
        <if test="sort!=null"><foreach collection="sort" index="index" item="item" open="ORDER BY" separator=",">${index} ${item}</foreach></if>
    </select>

    <resultMap id="secResourceWithRoleMap" type="secResource" autoMapping="true">
        <id property="id" column="id" javaType="long"/>
        <collection property="roleList" ofType="secRole" autoMapping="true" columnPrefix="r_"/>
    </resultMap>

    <select id="listAll" resultMap="secResourceWithRoleMap">
        SELECT r.*,ro.id AS r_id
        FROM sc_security_resource r
        LEFT JOIN sc_security_role_res rr ON r.id=rr.resource_id
        LEFT JOIN sc_security_role ro ON rr.role_id=ro.id
    </select>

    <select id="count" parameterType="secResource" resultType="long">
        SELECT COUNT(*)
        <include refid="listCondition"/>
    </select>

    <select id="countRole" parameterType="secResource" resultType="long">
        SELECT COUNT(*)
        FROM sc_security_role_res rr
        JOIN sc_security_role r ON rr.role_id=r.id
        WHERE rr.resource_id=#{id} AND r.superior=0
    </select>

    <select id="listAllUniqueInfo" resultType="secResourceFromXml">
        SELECT id,`key`,`type`,url,method
        FROM sc_security_resource
    </select>

    <insert id="saveMultiFromXml">
        INSERT IGNORE INTO sc_security_resource(`name`,`key`,pid,pkey,`type`,url,method,seq,`desc`,assign,log)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.name},#{item.key},0,#{item.pkey},#{item.type},#{item.url},#{item.method},#{item.seq},
            #{item.desc},#{item.assign},#{item.log})
        </foreach>
    </insert>

    <update id="updateResPIdFromRes">
        UPDATE sc_security_resource r1,sc_security_resource r2
        SET r1.pid=r2.id
        WHERE r1.pkey=r2.key
    </update>

    <insert id="saveRoleRes">
        INSERT IGNORE INTO sc_security_role_res(role_id,resource_id)
        SELECT 1,id
        FROM sc_security_resource
        WHERE `key` IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item.key}
        </foreach>
    </insert>

    <select id="listByRoles" resultType="secResource">
        SELECT r.key
        FROM sc_security_role_res rr
        JOIN sc_security_resource r ON rr.resource_id = r.id
        WHERE rr.role_id IN
        <foreach collection="roles" open="(" close=")" separator="," item="item">
            #{item.id}
        </foreach>
    </select>

    <select id="getByKey" resultMap="secResourceMap">
        SELECT r.*,
        p.id AS p_id,p.name AS p_name
        FROM sc_security_resource r
        LEFT JOIN sc_security_resource p ON r.pid=p.id
        WHERE r.key=#{key}
    </select>

    <update id="updateByKey">
        UPDATE sc_security_resource
        SET `name`=#{name},`key`=#{newKey}
        WHERE `key`=#{key}
    </update>
</mapper>