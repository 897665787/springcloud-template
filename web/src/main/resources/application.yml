server:
  port: 6001
  tomcat:
    min-spare-threads: 5
    max-threads: 100

spring:
  profiles:
    include: redis,rabbitmq
  main:
    allow-bean-definition-overriding: true
  servlet:
    multipart:
      max-file-size: 10MB #单个文件大小限制，默认1M
      max-request-size: 10MB #一次请求中所有上传文件总大小限制，默认1M
  resources:
    #用于告诉springboot应该在何处寻找静态资源，springboot默认的位置和优先级：spring.resources.static-locations=classpath:/static,classpath:/public,classpath:/resources,classpath:/META-INF/resources
    static-locations: /assets/
  mvc:
    #资源访问路径和spring.mvc.static-path-pattern匹配，当资源访问路径为"%/static/**”时，springboot才会处理请求
    static-path-pattern: /assets/**
    #相关页面解析器设置
    view:
      prefix: /views/
      suffix: .jsp

logging:
  #为了避免日志目录生成{APP_NAME}_IS_UNDEFINED目录，不能使用默认配置logback.xml或logback-spring.xml命名，详细参考：http://www.itersblog.com/archives/5.html
  config: classpath:logback-conf.xml
  file:
    #日志文件目录。./表示相对于项目根目录，即项目根目录下的logs目录。也可配置绝对路径，如：/home/webapp/logs
    path: ./logs/${spring.application.name}

########## Feign Ribbon Hystrix 三者关系：https://www.cnblogs.com/crazymakercircle/p/11664812.html ##########
feign:
  hystrix: #开启feign的hystrix支持,默认false
    enabled: true
  #httpclient: # 使用Apache HttpClient作为http客户端，默认HttpURLConnection
    #enabled: true
  #okhttp: # 使用okhttp作为http客户端  ，默认HttpURLConnection
    #enabled: true
  #使用Feign进行微服务调用分为两层：Hystrix的调用和Ribbon的调用，Feign自身的配置会被覆盖
  client:
    config:
      default:
        connectTimeout: 1000 #连接超时时间，默认1000ms
        readTimeout: 1000 #读取超时时间，默认1000ms
    
#参考https://www.cnblogs.com/zhenbianshu/p/9630167.html，https://blog.csdn.net/u010395804/article/details/80266335
hystrix:
  command:
    default: #全局默认配置
      execution: #线程隔离相关
        timeout:
          enabled: true #是否给方法执行设置超时时间，默认true
        isolation:
          strategy: THREAD #默认线程池方式。还有一种信号量的方式SEMAPHORE
          thread:
            #Hystrix的超时时间 = Ribbon的重试次数(包含首次) * (ribbon.ReadTimeout + ribbon.ConnectTimeout)
            timeoutInMilliseconds: 3000 #方法执行超时时间，默认1000ms
            interruptOnTimeout: true #发生超时时是否中断方法的执行，默认true
            interruptOnCancel: false #是否在方法执行被取消时中断方法，默认false
  threadpool:
    default:
      #核心线程池的大小，默认 10，一般根据 QPS * 99% cost + redundancy count 计算得出
      coreSize: 10
      #是否允许线程池扩展到最大线程池数量，默认 false
      allowMaximumSizeToDivergeFromCoreSize: true
      #线程池中线程的最大数量，默认10，此配置项单独配置时并不会生效，需要启用 allowMaximumSizeToDivergeFromCoreSize 项
      maximumSize: 15
      #由上面的 maximumSize，我们知道，线程池内核心线程数目都在忙碌，再有新的请求到达时，线程池容量可以被扩充为到最大数量，等到线程池空闲后，多于核心数量的线程还会被回收，此值指定了线程被回收前的存活时间，默认 2min
      keepAliveTimeMinutes: 2
  circuitBreaker: #熔断器相关配置
    enabled: true #是否启动熔断器，默认true，false表示不要引入Hystrix
    requestVolumeThreshold: 20 #启用熔断器功能窗口时间内的最小请求数
    sleepWindowInMilliseconds: 5000 #所以此配置的作用是指定熔断器打开后多长时间内允许一次请求尝试执行，默认5000ms
    errorThresholdPercentage: 50 #窗口时间内超过50%的请求失败后就会打开熔断器将后续请求快速失败掉,默认50
    
ribbon:
  eager-load: #饥饿加载，默认false(用于防止第一次请求初始化耗时长而报错)
    enabled: true
    clients: template-order,template-user #@FeignClient value值，多个逗号分隔
  #Ribbon重试次数(包含首次) = 1 + ribbon.MaxAutoRetries + ribbon.MaxAutoRetriesNextServer + (ribbon.MaxAutoRetries * ribbon.MaxAutoRetriesNextServer)
  MaxAutoRetries: 0 #同一实例最大重试次数，不包括首次调用。默认0
  MaxAutoRetriesNextServer: 1 #同一个微服务其他实例的最大重试次数，不包括第一次调用的实例。默认1
  OkToRetryOnAllOperations: false #是否所有操作（GET、POST等）都允许重试。默认false
  ServerListRefreshInterval: 2000 #从注册中心刷新服务器列表信息的时间间隔，默认2000ms
  #ConnectTimeout = feign.client.config.default.connectTimeout
  ConnectTimeout: 1000 #连接超时时间，默认无
  #ReadTimeout >= Ribbon重试次数(包含首次) * feign.client.config.default.connectTimeout
  ReadTimeout: 1000 #读取超时时间，默认无
  
template:
  sequence:
    datacenterId: 0
  threadpool:
    corePoolSize: 10
    maxPoolSize: 20
    queueCapacity: 200
    keepAliveSeconds: 60
    threadNamePrefix: t-subTask-
    waitForTasksToCompleteOnShutdown: true
    awaitTerminationSeconds: 60
  requestFilter:
    # 忽略日志打印匹配表达式，支持?匹配单个字符，*匹配多个字符
    ignoreLogPatterns: /assets/*,/favicon.ico


# Token 配置
token:
  # token名称
  name: x-token
  # token有效期，单位s 默认30天, -1代表永不过期 
  timeout: 2592000
  
# Sa-Token 配置
sa-token: 
  # token名称 (同时也是cookie名称)
  token-name: ${token.name}
  # token有效期，单位s 默认30天, -1代表永不过期 
  timeout: ${token.timeout}
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录) 
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token) 
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志 
  is-log: false
  # jwt秘钥 
  jwt-secret-key: ${token.secret}
